/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.healthathome.api;

import io.healthathome.dto.Cart;
import io.healthathome.dto.Item;
import io.healthathome.dto.Pay;
import io.healthathome.dto.PayResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.io.IOException;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-03-08T15:45:56.178Z")

@Api(value = "cart", description = "the cart API")
public interface CartApi {

    @ApiOperation(value = "cart", notes = "", response = Void.class, authorizations = {
        @Authorization(value = "Bearer")
    }, tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Product added to the cart", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class) })
    
    @RequestMapping(value = "/cart/add-product/{user}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> cartAddProductIdUserPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Item body, @ApiParam(value = "User ID",required=true ) @PathVariable("user") String user);


    @ApiOperation(value = "cart", notes = "", response = Void.class, authorizations = {
        @Authorization(value = "Bearer")
    }, tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Pay done", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class) })
    
    @RequestMapping(value = "/cart/pay",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PayResponse> cartPay(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Pay body) throws IOException;


    @ApiOperation(value = "cart", notes = "", response = Cart.class, responseContainer = "List", authorizations = {
        @Authorization(value = "Bearer")
    }, tags={ "cart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Cart.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class) })
    
    @RequestMapping(value = "/cart/{user}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Cart> getCart(@ApiParam(value = "User ID",required=true ) @PathVariable("user") String user);

}
